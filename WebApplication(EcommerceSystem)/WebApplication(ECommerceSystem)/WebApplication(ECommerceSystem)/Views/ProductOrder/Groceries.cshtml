@model Shared.Common.ProductOrderCommon
@{
    ViewBag.Title = "Groceries";
    var availablequantity = Model.ProductQuantity;
    Model.ProductQuantity = "0";
}

@*<h2>Clothes</h2>*@
<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 90vh; /* The height is 400 pixels */
        width: 70%; /* The width is the width of the web page */
    }

    /*#LatLng {
            height: 90vh;
            width: 30%;
            position: relative;
            float: left;
            background: linear-gradient(to right, violet,indigo );
        }*/
</style>

<div class="container-fluid">
    @using (Html.BeginForm("Groceries", "ProductOrder", new { }, FormMethod.Post, new { @role = "form", @class = "form-horizontal", @style = "margin-left:5%; margin-right:5%", @id = "User", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ProductReferenceId)
        @Html.HiddenFor(m => m.ProductReferenceId)
        @Html.HiddenFor(m => m.SupplierEmail)

        if (!Html.ViewData.ModelState.IsValid)
        {
            var resp = WebApplication_ECommerceSystem_.Library.StaticData.GetSessionMessage();

            if (null != resp)
            {
                @section Message
                    {
                    <script type="text/javascript">
                        ManageMessage(@resp.ErrorCode, "@resp.Message");
                    </script>
                }
            }
        }
        <div class="media-body align-content-center col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 bg-light" style="padding: 30px;  border-radius: 15px;">
            <h3>Place Your Order</h3>
            <div class="row">
                <div class="col-6">
                    <div class="row">
                        <div class="col-12">
                            <img src="@Url.Content(Model.DocName)" style="height:500px; width:100%" />
                        </div>
                        <br />
                        <hr />
                        <h3>Mark Your Order Location</h3>
                        <div id="map" class="col-12 col-md-12 col-lg-12 ">

                        </div>
                    </div>

                </div>





                <div class="col-6">
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Product Name</label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.ProductName, Model.ProductName, new { @class = "form-control", @required = "required", @readonly = "readonly", @placeholder = "Enter Product Name" })
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Product Color</label>
                                </div>
                                <div class="col-12 ">
                                    @Html.DropDownListFor(m => m.ProductColor, ViewData["ColorList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @required = "required", @readonly = "readonly", @placeholder = "Enter Product Name", @onchange = "loadQuantity()" })
                                </div>
                            </div>
                        </div>
                    </div>*@
                                @*<div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Product Size</label>
                                </div>
                                <div class="col-12 ">
                                    @Html.DropDownListFor(m => m.ProductSize, ViewData["SizeList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @required = "required", @readonly = "readonly", @placeholder = "Enter Product Name", @onchange = "loadQuantity()" })
                                </div>
                            </div>
                        </div>
                    </div>*@
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Choose Quantity   &nbsp; &nbsp; Available= <span id="availabelQuantity"> @availablequantity</span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.ProductQuantity, Model.ProductQuantity, new { @class = "form-control", @required = "required", @placeholder = "Enter Product Name", @type = "number", @max=availablequantity })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Product Price</label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.ProductPrice, Model.ProductPrice, new { @class = "form-control", @required = "required", @placeholder = "Enter Product Name", @type = "number", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <h3>Shipping Information</h3>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Shipping Contact No<span class="text-danger">*</span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.CustomerContactNo, Model.CustomerContactNo, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Contact No ", @type = "number" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Shipping Full Name <span class="text-danger">*</span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.CustomerFullName, Model.CustomerFullName, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping full Name", @type = "text" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Shipping Address <span class="text-danger">*</span> </label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.DeliveryAddress, Model.DeliveryAddress, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <hr />
                    <h5>Location Information</h5><br />
                    <h6>Location Where Product is going to be delivered</h6>

                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Marked Location Latitude <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.DeliveryLatitude, Model.DeliveryLatitude, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Marked Location Longitude <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.DeliveryLongitude, Model.DeliveryLongitude, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>










                </div>

            </div>
            <div class="row">
                <div class="col-4">
                    <hr />
                    <h5>Supplier Information</h5>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Store Name <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.SupplierName, Model.SupplierName, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Supplier Address <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.SupplierAddress, Model.SupplierAddress, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Supplier Contact No <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.SupplierContactNo, Model.SupplierContactNo, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-4">
                    <hr />
                    <h5>&nbsp;</h5>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Store Latitude <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.SupplierLatitude, Model.SupplierLatitude, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Store Longitude <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.SupplierLongitude, Model.SupplierLongitude, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row justify-content-start" style="padding:1em ">
                        <div class="form-control-sm form-control-md form-control-lg ">

                            <button type="submit" value="Submit" class=" btn btn-group-lg btn-success " style="font-size:1em"><i class="mdi mdi-check"></i>Submit</button>


                        </div>
                    </div>
                </div>
                <div class="col-4">
                    <hr />
                    <h5>&nbsp;</h5>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Delivery Distance <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.ShippingDistance, Model.ShippingDistance, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Delivery Charge <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.ShippingCharge, Model.ShippingCharge, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col-12">
                                    <label class="col-form-label col-form-label-lg ">Total Price <span class="text-danger">* </span></label>
                                </div>
                                <div class="col-12 ">
                                    @Html.TextBoxFor(m => m.TotalPrice, Model.TotalPrice, new { @class = "form-control", @required = "required", @placeholder = "Enter Shipping Address", @type = "text", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    }

</div>
<script>
        //function loadQuantity() {
        //    debugger;
        //    var Size = $("#ProductSize").val();
        //    var Color = $("#ProductColor").val();
        //    var ProductReferenceId = $("#ProductReferenceId").val();
        //    var quantity = document.getElementById("ProductQuantity");
        //    if (Size != "" && Color != "") {
        //        $.get("/UserCart/QuantityBySizeColor?Color=" + Color + "&Size=" + Size + "&ProductReferenceId=" + ProductReferenceId,
        //            function (data, status) {
        //                debugger;
        //                data = parseInt(data);
        //                quantity.max = data;
        //                $("#availabelQuantity").html(data);
        //            });

        //    }

        //}

        var markers = [];
        var marker;
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                mapTypeControl: true,
                center: { lat: -25.363882, lng: 131.044922 }



            });

            //for marking current user location
            infoWindow = new google.maps.InfoWindow;

            if (navigator.geolocation) {
                  navigator.geolocation.getCurrentPosition(function(position) {
                        var pos = {
                          lat: position.coords.latitude, //gives cordinate of latitude
                          lng: position.coords.longitude  //gives cordinate of longitutide
                        };

                        infoWindow.setPosition(pos);
                        infoWindow.setContent('Your Current Location Is Selected');   //set the message for your location
                        infoWindow.open(map);   //this help to visuale the message in your map
                          var marker = new google.maps.Marker({ position: pos, map: map });  //mark your location
                      map.setCenter(pos);
                      getLatLng(pos.lat, pos.lng);

                  }, function() {
                     handleLocationError(true, infoWindow, map.getCenter());
                  });
            } else {
              // Browser doesn't support Geolocation
              handleLocationError(false, infoWindow, map.getCenter());
            }

            //for selecting the location user have clicked

            map.addListener('click', function(e) {

              placeMarkerAndPanTo(e.latLng, map);
            });


	        //var listener1 = map.addListener('click', aFunction); // call the event listener onclick and call the function aFunction

        }
        //for selecting the current location
        function handleLocationError(browserHasGeolocation, infoWindow, pos) {

            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                                  'Error: The Geolocation service failed.' :
                                  'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
        }


        //for selecting the location user have clicked
        function placeMarkerAndPanTo(latLng, map) {
            debugger;

            if (markers.length > 0) {
                marker.setVisible(false);
                markers = [];
            }
            marker = new google.maps.Marker({

              position: latLng,
              map: map,
	           title:"latitude="+latLng.lat()+", longitude="+latLng.lng()+""
            });

            markers.push(marker);
            getLatLng(latLng.lat(), latLng.lng());
            map.panTo(latLng);

        }


        //method to set latitude and longitude value to the of clicked position
        function getLatLng(latitude, longitude) {
            debugger;
            $("#DeliveryLatitude").val(latitude);
            $("#DeliveryLongitude").val(longitude);

            forDistance();
        }


        //function aFunction(){

	       // alert("hi");
	       // /* google.maps.event.removeListener(listener1);
	       // google.maps.event.clearListeners(marker, 'click'); */

        //}
















        //for distance Measurement
        function forDistance() {
              //var bounds = new google.maps.LatLngBounds;
             // var markersArray = [];
            debugger;
            var supplierlat = parseFloat( $("#SupplierLatitude").val());
            var supplierLng = parseFloat( $("#SupplierLongitude").val());
            var customerLat = parseFloat( $("#DeliveryLatitude").val());
            var CustomerLng = parseFloat( $("#DeliveryLongitude").val());
            var supplierAddr = $("#SupplierAddress").val();
            var CustomerAddr = $("#DeliveryAddress").val();


            //var distanceInfo = "http://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=" + supplierlat + "," + supplierLng + "&destinations=" + customerLat + "," + CustomerLng + "&key=AIzaSyDDC4pp_KP1UJ-AtODA5V1m5aPImLMB7Uk";
            //because of google billing account temporary distance matrix api is not enabled

            var distance = 5;
            $("#ShippingDistance").val("5 Km.");
            if (distance <=1) {
                $("#ShippingCharge").val(10);
            }
            else if (distance <= 5) {
                $("#ShippingCharge").val(30);
            }
            else if (distance <= 10) {
                $("#ShippingCharge").val(50);
            }
            else if (distance <= 15) {
                $("#ShippingCharge").val(65);
            }
            else if (distance <= 20) {
                $("#ShippingCharge").val(75);
            }
            else if (distance <= 30) {
                $("#ShippingCharge").val(90);
            }
            else if (distance <= 50) {
                $("#ShippingCharge").val(120);
            }
            else if (distance > 50) {
                $("#ShippingCharge").val(150);
            }

            loadTotalAmount();
            //var origin1 = { lat: supplierlat, lng: supplierLng };
            //var origin2 = supplierAddr;
            //var destinationA = CustomerAddr;
            //var destinationB = { lat: customerLat, lng: CustomerLng };



              //var destinationIcon = 'https://chart.googleapis.com/chart?' + 'chst=d_map_pin_letter&chld=D|FF0000|000000';
              //var originIcon = 'https://chart.googleapis.com/chart?' + 'chst=d_map_pin_letter&chld=O|FFFF00|000000';
              //var map = new google.maps.Map(document.getElementById('map'), {
              //  zoom: 10
              //});
             // var geocoder = new google.maps.Geocoder;




             // var service = new google.maps.DistanceMatrixService;
             // service.getDistanceMatrix({
             //   origins: [origin1,origin2],
             //   destinations: [destinationA,destinationB],
             //   travelMode: 'DRIVING',
             //   unitSystem: google.maps.UnitSystem.METRIC,
             //   avoidHighways: false,
             //   avoidTolls: false
             // }, function (response, status) {
             //         debugger;
             //         console.log(response);
             //   if (status !== 'OK') {
             //     alert('Error was: ' + status);
             //   }
             //   else {
             //       debugger;
             //         var originList = response.originAddresses;
             //         var destinationList = response.destinationAddresses;
             //         var outputDiv = document.getElementById('output');
             //         outputDiv.innerHTML = '';
             //         deleteMarkers(markersArray);

             //         var showGeocodedAddressOnMap = function(asDestination) {
             //           var icon = asDestination ? destinationIcon : originIcon;
             //           return function(results, status) {
             //             if (status === 'OK') {
             //               map.fitBounds(bounds.extend(results[0].geometry.location));
             //               markersArray.push(new google.maps.Marker({
             //                 map: map,
             //                 position: results[0].geometry.location,
             //                 icon: icon
             //               }));
             //             } else {
             //               alert('Geocode was not successful due to: ' + status);
             //             }
             //           };
             //         };

             //     for (var i = 0; i < originList.length; i++) {
             //       var results = response.rows[i].elements;
             //       geocoder.geocode({'address': originList[i]},
             //           showGeocodedAddressOnMap(false));
             //       for (var j = 0; j < results.length; j++) {
             //         geocoder.geocode({'address': destinationList[j]},
             //             showGeocodedAddressOnMap(true));
             //         outputDiv.innerHTML += originList[i] + ' to ' + destinationList[j] +
             //             ': ' + results[j].distance.text + ' in ' +
             //             results[j].duration.text + '<br>';
             //       }
             //     }
             //   }
             //});
        }



        function loadTotalAmount() {
            var quantity = parseFloat( $("#ProductQuantity").val());
            var Price = parseFloat($("#ProductPrice").val());
            var shippingCharge = parseFloat($("#ShippingCharge").val());
            if((quantity != 0 && quantity!=NaN) && (Price != 0 && Price != NaN) && (shippingCharge != 0 && shippingCharge != NaN)){
                var total = (quantity * Price) + shippingCharge;
                $("#TotalPrice").val(total);
            }
        }






</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDDC4pp_KP1UJ-AtODA5V1m5aPImLMB7Uk&callback=initMap">
</script>